from abc import ABC, abstractmethod

class Strategy(ABC):
    @abstractmethod
    def execute(self):
        pass

class ConcreteStrategyA(Strategy):
    def execute(self):
        return "Виконання стратегії A"

class ConcreteStrategyB(Strategy):
    def execute(self):
        return "Виконання стратегії B"

class Context:
    def __init__(self, strategy):
        self._strategy = strategy

    def set_strategy(self, strategy):
        self._strategy = strategy

    def execute_strategy(self):
        return self._strategy.execute()

# Використання
context = Context(ConcreteStrategyA())
print(context.execute_strategy())  # Вивід: Виконання стратегії A

context.set_strategy(ConcreteStrategyB())
print(context.execute_strategy())  # Вивід: Виконання стратегії B
